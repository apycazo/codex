# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> #
# Contains only SP configurations (IDP should be read from metadata #
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< #

#  If 'strict' is True, then the Java Toolkit will reject unsigned or unencrypted messages if it expects them signed or
#  encrypted. Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict = false

# Enable debug mode (to print errors)
onelogin.saml2.debug = false

# ----------------------------- #
# --- Service provider data --- #
# ----------------------------- #

# ID for the service provider (must be an URI)
onelogin.saml2.sp.entityid = codex-auth-saml2

# Specifies info about where and how the <AuthnResponse> message MUST be returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned.
onelogin.saml2.sp.assertion_consumer_service.url = http://localhost:8080/saml/login

# SAML protocol binding to be used when returning the <Response>  message. Onelogin Toolkit supports for this endpoint
# the HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be returned to the requester,
# in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://localhost:8080/saml/logout

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message. Onelogin Toolkit supports for this endpoint the HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to  represent the requested subject.
# Take a look on core/src/main/java/com/onelogin/saml2/util/Constants.java to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
#onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:email

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters
onelogin.saml2.sp.x509cert =

# Future SP certificate, to be used during SP Key roll over
onelogin.saml2.sp.x509certNew =

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey =